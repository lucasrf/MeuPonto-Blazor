@page "/apontamento"

@using MeuPonto_Blazor.Data
@using MeuPonto;
@inject EmpresaService EmpresaService
@inject PontoService PontoService
@inject NavigationManager NavManager

<h1>Apontamento</h1>
<p>Marque abaixo o apontamento de horas conforme periodo selecionado.</p>

<select class="form-control selectpicker" @bind="EmpresaService.SelectedPeriodo.Referencia"
    ontimeupdate="@UpdateApontamento();">
    <option>Selecione um valor</option>
    @foreach (var item in EmpresaService.GetEmpresa().Periodos)







    {
        <option value="@item.Referencia">@item.Descricao</option>







    }
</select>

@if (apontamentos != null)







{
    <table class="table">
        <thead>
            <tr>
                <th>Data</th>
                <th>Marcacoes</th>
                <th>Status</th>
                <th>Observacoes</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var apontamento in apontamentos)







            {
                <tr>
                    <td>@apontamento.Date.ToShortDateString()</td>
                    <td>@apontamento.GetMarcacoes()</td>
                    <td>@apontamento.GetJornada().ToString()</td>
                    <td><input type="text" class="form-control" placeholder="Observacoes" @bind="@apontamento.Observacao" />
                    </td>
                    <td><button class="btn btn-primary" @onclick="() => RedirectMarcacao(apontamento)">Editar</button></td>
                </tr>







            }
        </tbody>
    </table>







}

@code {







    private Ponto[] apontamentos;















    protected override async Task OnInitializedAsync()







    {







        await UpdateApontamento();







    }







    public async Task UpdateApontamento()







    {







        if (EmpresaService.SelectedPeriodo.Referencia != DateTime.MinValue)







        {







            apontamentos = await PontoService.GetApontamentos(EmpresaService.GetEmpresa().Funcionarios.First(),



            EmpresaService.SelectedPeriodo);







        }







    }







    private void RedirectMarcacao(Ponto selectedPonto)







    {







        EmpresaService.SelectedPonto = selectedPonto;







        NavManager.NavigateTo("/marcacao");







    }
}